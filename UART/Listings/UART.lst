C51 COMPILER V9.60.7.0   UART                                                              01/20/2024 23:34:41 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\UART.obj
COMPILER INVOKED BY: E:\Electrical\Application\Keil_C51\C51\BIN\C51.EXE UART.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTE
                    -ND PRINT(.\Listings\UART.lst) TABS(2) OBJECT(.\Objects\UART.obj)

line level    source

   1          #include <REGX51.H>
   2          #include "UART.h"
   3          
   4          
   5          static const unsigned int code COEFFICIENT = XTAL_FREQ / 384;
   6          
   7          
   8          void UART_init(unsigned int baud_rate)
   9          {
  10   1        SCON = 0x50;                            // set uart mode 1, receive enable; SM0=0 SM1=1 REN=1
  11   1        TMOD = (TMOD & 0x0F) | 0x20;            // set timer1 mode 2 and keep mode of timer0
  12   1        // caculate timer overflow
  13   1        if (COEFFICIENT % baud_rate != 0)
  14   1        {
  15   2          PCON |= 0x80;                         // PCON.7(SMOD) = 1 for baud_rate * 2
  16   2          TH1 = 256 - (2 * COEFFICIENT) / baud_rate;        // 256 - (2 * crystal / (12 * 32))/baud
  17   2        }
  18   1        else
  19   1        {
  20   2          PCON &= 0x7F;                         // PCON.7 (SMOD) = 0
  21   2          TH1 = 256 - COEFFICIENT / baud_rate;        // 256 - (crystal / (12 * 32))/baud
  22   2        }
  23   1        TR1 = 1;                                // Start timer1
  24   1      }
  25          
  26          void UART_putchar(char c)
  27          {
  28   1        SBUF = c;
  29   1        while (!TI);
  30   1        TI = 0;
  31   1      }
  32          
  33          void UART_getchar(char* c)
  34          { 
  35   1        while (!RI);
  36   1        *c = SBUF;
  37   1        RI = 0;
  38   1      }
  39          
  40          void UART_print(char* str)
  41          {
  42   1        while (*str)
  43   1          UART_putchar(*str++);
  44   1      }
  45          
  46          void UART_println(char* str)
  47          {
  48   1        UART_print(str);
  49   1        UART_putchar('\r');
  50   1        UART_putchar('\n');
  51   1      }
  52          
  53          int _UART_read(char buffer[], int maxlen)
  54          {
C51 COMPILER V9.60.7.0   UART                                                              01/20/2024 23:34:41 PAGE 2   

  55   1        int i, cd;
  56   1        for (i = 0; i < maxlen; i++)
  57   1        {
  58   2          cd = 12300;
  59   2          while (!RI)
  60   2            if (!--cd)
  61   2            {
  62   3              buffer[i] = '\0';
  63   3              return i;
  64   3            }
  65   2          buffer[i] = SBUF;
  66   2          RI = 0;
  67   2        }
  68   1        return i;
  69   1      }
  70          
  71          int _UART_read_until(char buffer[], int maxlen, char end)
  72          {
  73   1        int i;
  74   1        char c;
  75   1        for (i = 0; i < maxlen; i++)
  76   1        {
  77   2          UART_getchar(&c);
  78   2          if (c == end)
  79   2          {
  80   3            buffer[i] = '\0';
  81   3            return i;
  82   3          }
  83   2          buffer[i] = c;
  84   2        }
  85   1        return i;
  86   1      }
  87          
  88          bit UART_available()
  89          {
  90   1        return RI;
  91   1      }
  92          
  93          void main()
  94          {
  95   1        UART_init(9600);
  96   1        UART_print("Test");
  97   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    326    ----
   CONSTANT SIZE    =      7    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
