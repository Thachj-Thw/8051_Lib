C51 COMPILER V9.60.7.0   UART                                                              12/02/2023 23:10:49 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\UART.obj
COMPILER INVOKED BY: E:\Electrical\Application\Keil_C51\C51\BIN\C51.EXE UART.c OPTIMIZE(8,SPEED) DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\UART.lst) TABS(2) OBJECT(.\Objects\UART.obj)

line level    source

   1          #include <REGX51.H>
   2          #include "UART.h"
   3          
   4          #message "The UART.h only works correctly at 11.0592MHz and max baud rate is 57600"
*** MESSAGE C320 IN LINE 4 OF UART.c: "The UART.h only works correctly at 11.0592MHz and max baud rate is 57600"
   5          
   6          
   7          void UART_init(unsigned int baud_rate)
   8          {
   9   1        if (baud_rate > 57600)                  // baud rate to hight
  10   1          return;
  11   1        SCON = 0x50;                            // set uart mode 1, receive enable; SM0=0 SM1=1 REN=1
  12   1        TMOD = (TMOD & 0x0F) | 0x20;            // set timer1 mode 2 and keep mode of timer0
  13   1        // caculate timer overflow
  14   1        if (28800 % baud_rate != 0)
  15   1        {
  16   2          PCON |= 0x80;                         // PCON.7(SMOD) = 1 for baud_rate * 2
  17   2          TH1 = 256 - 57600 / baud_rate;        // 256 - (2 * crystal / (12 * 32))/baud
  18   2        }
  19   1        else
  20   1        {
  21   2          PCON &= 0x7F;                         // PCON.7 (SMOD) = 0
  22   2          TH1 = 256 - 28800 / baud_rate;        // 256 - (crystal / (12 * 32))/baud
  23   2        }
  24   1        TR1 = 1;                                // Start timer1
  25   1      }
  26          
  27          void UART_putchar(char c)
  28          {
  29   1        SBUF = c;
  30   1        while (!TI);
  31   1        TI = 0;
  32   1      }
  33          
  34          char UART_getchar()
  35          { 
  36   1        char c;
  37   1        while (!RI);
  38   1        c = SBUF;
  39   1        RI = 0;
  40   1        return c;
  41   1      }
  42          
  43          void UART_print(char* str)
  44          {
  45   1        int i = 0;
  46   1        while (str[i])
  47   1          UART_putchar(str[i++]);
  48   1      }
  49          
  50          void UART_println(char* str)
  51          {
  52   1        UART_print(str);
  53   1        UART_putchar('\r');
C51 COMPILER V9.60.7.0   UART                                                              12/02/2023 23:10:49 PAGE 2   

  54   1        UART_putchar('\n');
  55   1      }
  56          
  57          int _UART_read(char buffer[], int maxlen)
  58          {
  59   1        int i, cd;
  60   1        for (i = 0; i < maxlen; i++)
  61   1        {
  62   2          cd = 12300;
  63   2          while (!RI)
  64   2            if (!--cd)
  65   2            {
  66   3              buffer[i] = '\0';
  67   3              return i;
  68   3            }
  69   2          buffer[i] = SBUF;
  70   2          RI = 0;
  71   2        }
  72   1        return i;
  73   1      }
  74          
  75          int _UART_read_until(char buffer[], int maxlen, char end)
  76          {
  77   1        int i;
  78   1        char c;
  79   1        for (i = 0; i < maxlen; i++)
  80   1        {
  81   2          c = UART_getchar();
  82   2          if (c == end)
  83   2          {
  84   3            buffer[i] = '\0';
  85   3            return i;
  86   3          }
  87   2          buffer[i] = c;
  88   2        }
  89   1        return i;
  90   1      }
  91          
  92          bit UART_available()
  93          {
  94   1        return RI;
  95   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    333    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
